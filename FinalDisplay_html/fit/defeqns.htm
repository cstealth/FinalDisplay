<html><head><link type='text/css' href='style.css' rel='stylesheet'></head><body class='pgBgnd'>
<h3 align='center'>Equations</h3>
<table width='90%' align='center' border='1' cellpadding='0' cellspacing='0'>
<tr><td>
</td></tr><tr><td>
********** Mapped Logic **********
</td></tr><tr><td>
</td></tr><tr><td>
AN1 <= (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
AN2 <= (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
AN3 <= (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
AN4 <= (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
AN5 <= (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
AN6 <= (COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2));
</td></tr><tr><td>
FDCPE_CLK_COUNTER0: FDCPE port map (CLK_COUNTER(0),CLK_COUNTER_D(0),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(0) <= (N_PZ_434 AND NOT CLK_COUNTER(0));
</td></tr><tr><td>
FDCPE_CLK_COUNTER1: FDCPE port map (CLK_COUNTER(1),CLK_COUNTER_D(1),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(1) <= ((N_PZ_434 AND CLK_COUNTER(0) AND NOT CLK_COUNTER(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT CLK_COUNTER(0) AND CLK_COUNTER(1)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER2: FDCPE port map (CLK_COUNTER(2),CLK_COUNTER_D(2),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(2) <= ((N_PZ_434 AND NOT N_PZ_505 AND CLK_COUNTER(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT N_PZ_505 AND CLK_COUNTER(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(1)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER3: FDCPE port map (CLK_COUNTER(3),CLK_COUNTER_D(3),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(3) <= ((N_PZ_434 AND CLK_COUNTER(3) AND NOT N_PZ_505)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT CLK_COUNTER(3) AND N_PZ_505));
</td></tr><tr><td>
FTCPE_CLK_COUNTER4: FTCPE port map (CLK_COUNTER(4),CLK_COUNTER_T(4),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_T(4) <= ((NOT N_PZ_434 AND CLK_COUNTER(4))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND CLK_COUNTER(3) AND N_PZ_505));
</td></tr><tr><td>
FDCPE_CLK_COUNTER5: FDCPE port map (CLK_COUNTER(5),CLK_COUNTER_D(5),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(5) <= ((N_PZ_434 AND NOT N_PZ_481 AND CLK_COUNTER(5))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT N_PZ_481 AND CLK_COUNTER(3) AND N_PZ_505 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(4)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER6: FDCPE port map (CLK_COUNTER(6),CLK_COUNTER_D(6),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(6) <= ((N_PZ_434 AND CLK_COUNTER(6) AND NOT N_PZ_481)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT CLK_COUNTER(6) AND N_PZ_481));
</td></tr><tr><td>
FDCPE_CLK_COUNTER7: FDCPE port map (CLK_COUNTER(7),CLK_COUNTER_D(7),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(7) <= ((N_PZ_434 AND NOT N_PZ_437 AND CLK_COUNTER(7))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT N_PZ_437 AND CLK_COUNTER(6) AND N_PZ_481));
</td></tr><tr><td>
FDCPE_CLK_COUNTER8: FDCPE port map (CLK_COUNTER(8),CLK_COUNTER_D(8),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(8) <= ((N_PZ_434 AND CLK_COUNTER(8) AND NOT N_PZ_437)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND NOT CLK_COUNTER(8) AND N_PZ_437));
</td></tr><tr><td>
FTCPE_CLK_COUNTER9: FTCPE port map (CLK_COUNTER(9),CLK_COUNTER_T(9),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_T(9) <= ((NOT N_PZ_434 AND CLK_COUNTER(9))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND CLK_COUNTER(8) AND N_PZ_437));
</td></tr><tr><td>
FTCPE_CLK_COUNTER10: FTCPE port map (CLK_COUNTER(10),CLK_COUNTER_T(10),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_T(10) <= ((NOT N_PZ_434 AND CLK_COUNTER(10))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND CLK_COUNTER(8) AND N_PZ_437 AND CLK_COUNTER(9) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(25)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER11: FDCPE port map (CLK_COUNTER(11),CLK_COUNTER_D(11),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(11) <= ((NOT CLK_COUNTER(10) AND NOT CLK_COUNTER(13) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(14) AND NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(17) AND NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(20) AND NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(23) AND NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(25) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(8) AND NOT CLK_COUNTER(25) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(9) AND NOT CLK_COUNTER(25) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT N_PZ_437 AND NOT CLK_COUNTER(25) AND CLK_COUNTER(11) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(12))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(6) AND NOT CLK_COUNTER(7) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(25) AND CLK_COUNTER(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (CLK_COUNTER(10) AND NOT CLK_COUNTER(13) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(14) AND NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(17) AND NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(20) AND NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(23) AND NOT CLK_COUNTER(24) AND CLK_COUNTER(8) AND N_PZ_437 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(9) AND NOT CLK_COUNTER(25) AND NOT CLK_COUNTER(11)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER12: FDCPE port map (CLK_COUNTER(12),CLK_COUNTER_D(12),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLK_COUNTER_D(12) <= ((N_PZ_434 AND CLK_COUNTER(12))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_434 AND CLK_COUNTER(10) AND CLK_COUNTER(8) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_437 AND CLK_COUNTER(9) AND CLK_COUNTER(11)));
</td></tr><tr><td>
FDCPE_CLK_COUNTER13: FDCPE port map (CLK_COUNTER(13),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER14: FDCPE port map (CLK_COUNTER(14),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER15: FDCPE port map (CLK_COUNTER(15),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER16: FDCPE port map (CLK_COUNTER(16),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER17: FDCPE port map (CLK_COUNTER(17),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER18: FDCPE port map (CLK_COUNTER(18),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER19: FDCPE port map (CLK_COUNTER(19),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER20: FDCPE port map (CLK_COUNTER(20),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER21: FDCPE port map (CLK_COUNTER(21),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER22: FDCPE port map (CLK_COUNTER(22),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER23: FDCPE port map (CLK_COUNTER(23),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER24: FDCPE port map (CLK_COUNTER(24),'0',CLK,'0','0','1');
</td></tr><tr><td>
FDCPE_CLK_COUNTER25: FDCPE port map (CLK_COUNTER(25),'0',CLK,'0','0','1');
</td></tr><tr><td>
FTCPE_COUNTER0: FTCPE port map (COUNTER(0),N_PZ_434,CLK,'0','0','1');
</td></tr><tr><td>
FTCPE_COUNTER1: FTCPE port map (COUNTER(1),COUNTER_T(1),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COUNTER_T(1) <= (COUNTER(0) AND NOT N_PZ_434);
</td></tr><tr><td>
FTCPE_COUNTER2: FTCPE port map (COUNTER(2),COUNTER_T(2),CLK,'0','0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;COUNTER_T(2) <= (COUNTER(0) AND NOT N_PZ_434 AND COUNTER(1));
</td></tr><tr><td>
</td></tr><tr><td>
C_A <= NOT (((N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(1) AND NOT MIN1(3) AND N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(1) AND NOT SEC1(3) AND N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND HOUR1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_327)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2(2) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	HOUR1(2) AND NOT N_PZ_327)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(2) AND NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
C_B_BUFR <= ((COUNTER(1) AND COUNTER(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND N_PZ_490)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND MIN2(3) AND NOT N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND N_PZ_353 AND MIN1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND MIN1(3) AND NOT N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(2) AND HOUR1(2) AND N_PZ_358)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(2) AND HOUR1(3) AND NOT N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND MIN2(1) AND MIN2(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_addsub0000(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_420 AND SEC2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(1) AND SEC1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(1) AND SEC1(2)));
</td></tr><tr><td>
</td></tr><tr><td>
C_B <= C_B_BUFR;
</td></tr><tr><td>
</td></tr><tr><td>
C_C_BUFR <= NOT (((COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND SEC2(0) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT SEC2(1) AND NOT SEC2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(1) AND COUNTER(2) AND HOUR1(0) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(1) AND NOT HOUR1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(1) AND COUNTER(2) AND HOUR1(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
C_C <= C_C_BUFR;
</td></tr><tr><td>
</td></tr><tr><td>
C_D <= NOT (((N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_addsub0000(2) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2(1) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_420 AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND N_PZ_353 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	mux0001_add0000(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(1) AND NOT HOUR1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(3) AND N_PZ_358)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(2) AND NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(1) AND SEC1(2) AND NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(1) AND SEC1(2) AND NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
C_E_BUFR <= NOT (((N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2(1) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC2(1) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(1) AND NOT SEC2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1(1) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	HOUR1(1) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(1) AND NOT HOUR1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(1) AND NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
C_E <= C_E_BUFR;
</td></tr><tr><td>
</td></tr><tr><td>
C_F <= NOT (((N_PZ_396)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_addsub0000(2) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(1) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1_addsub0000(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(3) AND NOT N_PZ_358)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	mux0001_add0000(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(2) AND NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(2) AND NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
C_G <= NOT (((N_PZ_482)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_addsub0000(2) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1_addsub0000(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	mux0001_add0000(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(2) AND NOT MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(2) AND NOT SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(2) AND NOT MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND HOUR1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(2) AND NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(2) AND NOT SEC1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(2) AND NOT SEC1(3))));
</td></tr><tr><td>
</td></tr><tr><td>
DP <= NOT (((NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(2) AND NOT dot)));
</td></tr><tr><td>
FDCPE_HOUR10: FDCPE port map (HOUR1(0),HOUR1_D(0),clk2,HOUR1_0__or0000,HOUR1_PRE(0),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_D(0) <= ((HOUR1(0) AND NOT N_PZ_339)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (HOUR1_mux0012(3) AND N_PZ_339));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_PRE(0) <= (HOUR1_mux0012(3) AND N_PZ_430);
</td></tr><tr><td>
FDCPE_HOUR11: FDCPE port map (HOUR1(1),HOUR1_D(1),clk2,NOT HOUR1_1__or0000,HOUR1_PRE(1),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_D(1) <= NOT (((NOT HOUR1(1) AND NOT N_PZ_339)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_339 AND NOT N_PZ_358)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (HOUR1(0) AND NOT HOUR1(1) AND NOT set AND NOT HOUR2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND N_PZ_327 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND HOUR1(1) AND NOT set AND HOUR2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND NOT HOUR1(3))));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_PRE(1) <= (NOT N_PZ_327 AND N_PZ_430 AND N_PZ_358);
</td></tr><tr><td>
FDCPE_HOUR12: FDCPE port map (HOUR1(2),HOUR1_D(2),clk2,NOT HOUR1_2__or0000,HOUR1_PRE(2),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_D(2) <= NOT (((NOT HOUR1(2) AND NOT N_PZ_339)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT mux0001_add0000(2) AND N_PZ_339)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND N_PZ_327 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_430)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_PRE(2) <= (mux0001_add0000(2) AND NOT N_PZ_327 AND N_PZ_430);
</td></tr><tr><td>
FDCPE_HOUR13: FDCPE port map (HOUR1(3),HOUR1_D(3),clk2,NOT HOUR1_3__or0000,HOUR1_PRE(3),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_D(3) <= NOT (((N_PZ_339 AND NOT mux0001_add0000(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT N_PZ_339 AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND HOUR1(1) AND NOT set AND HOUR2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND N_PZ_327 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (HOUR1(0) AND NOT HOUR1(1) AND NOT set AND NOT HOUR2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND HOUR1(3))));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR1_PRE(3) <= (NOT N_PZ_327 AND mux0001_add0000(3) AND N_PZ_430);
</td></tr><tr><td>
</td></tr><tr><td>
HOUR1_0__or0000 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1_mux0012(3) AND N_PZ_430));
</td></tr><tr><td>
</td></tr><tr><td>
HOUR1_1__or0000 <= ((RESET AND NOT N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RESET AND NOT N_PZ_327 AND N_PZ_358));
</td></tr><tr><td>
</td></tr><tr><td>
HOUR1_2__or0000 <= ((mux0001_add0000(2) AND HOUR2_0__or0000)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RESET AND NOT N_PZ_430));
</td></tr><tr><td>
</td></tr><tr><td>
HOUR1_3__or0000 <= ((RESET AND NOT N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RESET AND NOT N_PZ_327 AND mux0001_add0000(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_430));
</td></tr><tr><td>
</td></tr><tr><td>
HOUR1_mux0012(3) <= ((NOT HOUR1(0) AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND NOT N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND NOT HOUR1(1) AND NOT HOUR1(2)));
</td></tr><tr><td>
FTCPE_HOUR20: FTCPE port map (HOUR2(0),HOUR2_T(0),clk2,NOT HOUR2_0__or0000,HOUR2_PRE(0),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR2_T(0) <= ((N_PZ_339 AND N_PZ_327 AND NOT HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(1) AND NOT HOUR1(2) AND N_PZ_339 AND N_PZ_327));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HOUR2_PRE(0) <= (HOUR1(0) AND NOT HOUR1(1) AND NOT HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	HOUR1(3) AND N_PZ_430);
</td></tr><tr><td>
</td></tr><tr><td>
HOUR2_0__or0000 <= ((RESET AND NOT N_PZ_327)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (RESET AND NOT N_PZ_430)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(1) AND NOT HOUR1(2) AND RESET));
</td></tr><tr><td>
</td></tr><tr><td>
LD0 <= clk2;
</td></tr><tr><td>
FTCPE_MIN10: FTCPE port map (MIN1(0),MIN1_T(0),clk2,MIN1_0__or0000,MIN1_PRE(0),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_T(0) <= ((NOT set AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_486 AND N_PZ_420 AND set_min)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_420 AND set_min AND N_PZ_490));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_PRE(0) <= (set AND NOT MIN1(0) AND set_min);
</td></tr><tr><td>
FTCPE_MIN11: FTCPE port map (MIN1(1),MIN1_T(1),clk2,MIN1_1__or0000,MIN1_PRE(1),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_T(1) <= ((NOT set AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND MIN1(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND NOT N_PZ_284 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_353)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND NOT MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_353));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_PRE(1) <= (set AND NOT N_PZ_486 AND set_min AND N_PZ_353);
</td></tr><tr><td>
FTCPE_MIN12: FTCPE port map (MIN1(2),MIN1_T(2),clk2,MIN1_2__or0000,MIN1_PRE(2),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_T(2) <= ((NOT set AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND MIN1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND NOT N_PZ_284 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND MIN1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1_addsub0000(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND NOT MIN1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN1_addsub0000(2)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_PRE(2) <= (set AND NOT N_PZ_486 AND set_min AND MIN1_addsub0000(2));
</td></tr><tr><td>
FTCPE_MIN13: FTCPE port map (MIN1(3),MIN1_T(3),clk2,MIN1_3__or0000,MIN1_PRE(3),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_T(3) <= ((NOT set AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND NOT N_PZ_284)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_420 AND NOT N_PZ_284 AND MIN1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1_addsub0000(2)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN1_PRE(3) <= (set AND NOT N_PZ_486 AND set_min AND MIN1_addsub0000(3));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_0__or0000 <= ((N_PZ_448)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND NOT N_PZ_486 AND MIN1(0) AND NOT N_PZ_284));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_1__or0000 <= ((N_PZ_448)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND NOT N_PZ_284 AND NOT N_PZ_353));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_2__or0000 <= ((N_PZ_448)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND NOT N_PZ_486 AND NOT N_PZ_284 AND NOT MIN1_addsub0000(2)));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_3__or0000 <= ((N_PZ_448)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND NOT N_PZ_284 AND NOT MIN1_addsub0000(3)));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_addsub0000(2) <= MIN1(2)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (MIN1(0) AND MIN1(1));
</td></tr><tr><td>
</td></tr><tr><td>
MIN1_addsub0000(3) <= MIN1(3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (MIN1(2) AND NOT MIN1_addsub0000(2));
</td></tr><tr><td>
FTCPE_MIN20: FTCPE port map (MIN2(0),MIN2_T(0),clk2,MIN2_0_or0000,MIN2_PRE(0),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_T(0) <= (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284);
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_PRE(0) <= (set AND N_PZ_486 AND set_min AND NOT MIN2(0));
</td></tr><tr><td>
FTCPE_MIN21: FTCPE port map (MIN2(1),MIN2_T(1),clk2,MIN2_1_or0000,MIN2_PRE(1),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_T(1) <= ((SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2_mux0000(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND NOT MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_mux0000(2)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_PRE(1) <= (set AND N_PZ_486 AND set_min AND MIN2_mux0000(2));
</td></tr><tr><td>
FTCPE_MIN22: FTCPE port map (MIN2(2),MIN2_T(2),clk2,MIN2_2_or0000,MIN2_PRE(2),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_T(2) <= ((SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490 AND NOT N_PZ_284 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND MIN2(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2_addsub0000(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_490 AND NOT N_PZ_284 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(2) AND MIN2_addsub0000(2)));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_PRE(2) <= (set AND N_PZ_486 AND set_min AND NOT N_PZ_490 AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	MIN2_addsub0000(2));
</td></tr><tr><td>
FTCPE_MIN23: FTCPE port map (MIN2(3),MIN2_T(3),clk2,MIN2_3_or0000,MIN2_PRE(3),'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_T(3) <= ((SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND MIN2(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT N_PZ_451)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND NOT N_PZ_284 AND NOT MIN2(3) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_451));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MIN2_PRE(3) <= (set AND N_PZ_486 AND set_min AND N_PZ_451);
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_0_or0000 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND N_PZ_486 AND set_min AND MIN2(0)));
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_1_or0000 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND N_PZ_486 AND NOT N_PZ_284 AND NOT MIN2_mux0000(2)));
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_2_or0000 <= ((N_PZ_448)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND N_PZ_486 AND NOT N_PZ_284 AND NOT MIN2_addsub0000(2)));
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_3_or0000 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set AND N_PZ_486 AND set_min AND NOT N_PZ_451));
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_addsub0000(2) <= MIN2(2)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (MIN2(0) AND MIN2(1));
</td></tr><tr><td>
</td></tr><tr><td>
MIN2_mux0000(2) <= ((NOT MIN2(0) AND MIN2(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT N_PZ_490 AND MIN2(0) AND NOT MIN2(1)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_284 <= (set AND NOT set_min);
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_327 <= ((HOUR1(1) AND HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (HOUR1(2) AND HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (HOUR1(0) AND NOT HOUR1(1) AND NOT HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND HOUR1(1) AND HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(3)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_339 <= ((NOT set AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (set_hour AND SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(2) AND SEC1(3) AND N_PZ_486 AND N_PZ_420 AND N_PZ_490));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_353 <= ((MIN1(0) AND NOT MIN1(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT MIN1(0) AND MIN1(1)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_358 <= ((HOUR1(0) AND NOT HOUR1(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND HOUR1(1)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_396 <= ((COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR2(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN2(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(1) AND NOT MIN2(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(1) AND NOT MIN1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(0) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(1) AND NOT SEC1(2)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_420 <= (NOT SEC2(1) AND SEC2(2) AND NOT SEC2(3));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_430 <= (set AND set_hour);
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_434 <= ((NOT CLK_COUNTER(10) AND NOT CLK_COUNTER(13) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(14) AND NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(17) AND NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(20) AND NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(23) AND NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(25))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(8) AND NOT CLK_COUNTER(25))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(9) AND NOT CLK_COUNTER(25))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(25) AND NOT CLK_COUNTER(11))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(25) AND NOT CLK_COUNTER(12))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT CLK_COUNTER(13) AND NOT CLK_COUNTER(14) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(15) AND NOT CLK_COUNTER(16) AND NOT CLK_COUNTER(17) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(18) AND NOT CLK_COUNTER(19) AND NOT CLK_COUNTER(20) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(21) AND NOT CLK_COUNTER(22) AND NOT CLK_COUNTER(23) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(24) AND NOT CLK_COUNTER(6) AND NOT CLK_COUNTER(7) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT CLK_COUNTER(25)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_437 <= (CLK_COUNTER(6) AND N_PZ_481 AND CLK_COUNTER(7));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_448 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (N_PZ_490 AND MIN2_0_or0000));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_451 <= (NOT N_PZ_490 AND MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (NOT N_PZ_490 AND MIN2(2) AND NOT MIN2_addsub0000(2));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_481 <= (CLK_COUNTER(3) AND N_PZ_505 AND CLK_COUNTER(4) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	CLK_COUNTER(5));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_482 <= ((COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN2(2) AND MIN2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC2(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC2(2) AND SEC2(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND COUNTER(1) AND NOT COUNTER(2) AND NOT MIN1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT MIN1(2) AND MIN1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND COUNTER(2) AND NOT HOUR1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(2) AND HOUR1(3))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT COUNTER(0) AND NOT COUNTER(1) AND NOT COUNTER(2) AND NOT SEC1(1) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT SEC1(2) AND SEC1(3)));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_486 <= (MIN1(0) AND NOT MIN1(1) AND NOT MIN1(2) AND MIN1(3));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_490 <= (MIN2(0) AND NOT MIN2(1) AND MIN2(2) AND NOT MIN2(3));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_505 <= (CLK_COUNTER(0) AND CLK_COUNTER(1) AND CLK_COUNTER(2));
</td></tr><tr><td>
</td></tr><tr><td>
N_PZ_630 <= (NOT set AND RESET);
</td></tr><tr><td>
FTCPE_SEC10: FTCPE port map (SEC1(0),'0',clk2,NOT N_PZ_630,'0','1');
</td></tr><tr><td>
FTCPE_SEC11: FTCPE port map (SEC1(1),SEC1_T(1),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC1_T(1) <= NOT (((NOT SEC1(0))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT SEC1(1) AND NOT SEC1(2) AND SEC1(3))));
</td></tr><tr><td>
FTCPE_SEC12: FTCPE port map (SEC1(2),SEC1_T(2),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC1_T(2) <= (SEC1(0) AND SEC1(1));
</td></tr><tr><td>
FTCPE_SEC13: FTCPE port map (SEC1(3),SEC1_T(3),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC1_T(3) <= ((SEC1(0) AND SEC1(1) AND SEC1(2))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND SEC1(3)));
</td></tr><tr><td>
FTCPE_SEC20: FTCPE port map (SEC2(0),SEC2_T(0),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC2_T(0) <= (SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND SEC1(3));
</td></tr><tr><td>
FTCPE_SEC21: FTCPE port map (SEC2(1),SEC2_T(1),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC2_T(1) <= (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND NOT N_PZ_420);
</td></tr><tr><td>
FTCPE_SEC22: FTCPE port map (SEC2(2),SEC2_T(2),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC2_T(2) <= ((SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND SEC2(1))
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND SEC2(2) AND NOT SEC2(3)));
</td></tr><tr><td>
FTCPE_SEC23: FTCPE port map (SEC2(3),SEC2_T(3),clk2,NOT N_PZ_630,'0','1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SEC2_T(3) <= (SEC2(0) AND SEC1(0) AND NOT SEC1(1) AND NOT SEC1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	SEC1(3) AND SEC2(1) AND SEC2(2));
</td></tr><tr><td>
FTCPE_dot: FTCPE port map (dot,dot_T,clk2,dot__or0000,dot_PRE,'1');
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot_T <= (NOT HOUR1(0) AND HOUR1(1) AND HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	N_PZ_339 AND NOT HOUR1(3));
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot_PRE <= (NOT HOUR1(0) AND HOUR1(1) AND HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(3) AND N_PZ_430 AND NOT dot);
</td></tr><tr><td>
</td></tr><tr><td>
dot__or0000 <= ((NOT RESET)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	OR (NOT HOUR1(0) AND HOUR1(1) AND HOUR2(0) AND NOT HOUR1(2) AND 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	NOT HOUR1(3) AND N_PZ_430 AND dot));
</td></tr><tr><td>
</td></tr><tr><td>
mux0001_add0000(2) <= HOUR1(2)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (HOUR1(0) AND HOUR1(1));
</td></tr><tr><td>
</td></tr><tr><td>
mux0001_add0000(3) <= HOUR1(3)
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;	XOR (HOUR1(2) AND NOT mux0001_add0000(2));
</td></tr><tr><td>
</td></tr><tr><td>
Register Legend:
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FDDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FTCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FTDCPE (Q,D,C,CLR,PRE,CE); 
<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LDCP  (Q,D,G,CLR,PRE); 
</td></tr><tr><td>
</td></tr>
</table>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
